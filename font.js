/**
 * Abstract font base class. The main responsibility of the Font class is to
 * take KAGE stroke data and generate path/SVG data.
 */
export class Font {
  constructor() {
    if (this.constructor == Font) {
      throw new Error("Abstract class Font can't be instantiated.");
    }
  }

  /**
   * Takes in an array of KAGE stroke data and returns an array of Path objects.
   */
  getPaths(strokesArray) {
    throw new Error("Function getPath() must be implemented.");
  }

  /**
   * Takes in a path that is assumed to be generated by this font's getPath()
   * and returns a generated SVG.
   */
  generateSVG(paths) {
    let buffer = "";
    buffer += "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" baseProfile=\"full\" viewBox=\"0 0 200 200\" width=\"200\" height=\"200\">\n";

    for(let path = 0; path < paths.length; path++) {
      buffer += "<path d=\"";
      buffer += paths[path].toSVGSequence();
      buffer += "\" fill=\"black\" />\n";
    }

    buffer += "</svg>\n";

    return buffer;
  }

  /**
   * Takes in a path that is assumed to be generated by this font's getPath()
   * and returns a font glyph. Currently unused and font format unknown.
   */
  generateFont(path) {
    throw new Error("Function generateFont() must be implemented.");
  }
}
